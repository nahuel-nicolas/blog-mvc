version: "3.8"
services:
  django_model:
    image: nahuelbarbieri/blog-app-mvc-django-model
    build:
      context: ./model/django_model/
      dockerfile: Dockerfile
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./model/django_model:/django_model
    command: >
      sh -c "cd /django_model &&
            echo '>>> INSTALLING PYTHON MODULES <<<' &&
            echo '' &&
            pip install -r requirements.txt &&
            echo '' &&
            echo '>>> RUNNING MIGRATIONS <<<' &&
            echo '' &&
            python manage.py migrate &&
            echo '' &&
            echo '>>> CREATING STATIC FILES <<<' &&
            echo '' &&
            python manage.py collectstatic --no-input &&
            echo '' &&
            echo '>>> STARTING SERVICE <<<' &&
            echo '' &&
            python manage.py runserver 0:${DJANGO_PORT}"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      CONFIGURATION: ${CONFIGURATION}
      PRODUCTION_HOSTNAME: ${PRODUCTION_HOSTNAME}
      PROTOCOL: ${PROTOCOL}
      HOSTNAME: ${HOSTNAME}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NODE_PORT: ${NODE_PORT}
      NODE_TEST_PORT: ${NODE_TEST_PORT}

  redis:
    image: redis:7.0.5-alpine
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./controller/redis_data:/data

  node_controller:
    image: node:18.12.1-alpine3.15
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./controller/node_controller:/node_controller
    command: >
      sh -c "cd /node_controller &&
            echo '>>> INSTALLING NODE MODULES <<<' &&
            echo '' &&
            npm i &&
            echo '' &&
            echo '>>> STARTING SERVICE <<<' &&
            echo '' &&
            npm start"
    depends_on:
      - django_model
      - redis
    environment:
      CONFIGURATION: ${CONFIGURATION}
      PRODUCTION_HOSTNAME: ${PRODUCTION_HOSTNAME}
      PROTOCOL: ${PROTOCOL}
      HOSTNAME: ${HOSTNAME}
      DJANGO_PORT: ${DJANGO_PORT}
      REDIS_PORT: ${REDIS_PORT}
      NODE_PORT: ${NODE_PORT}
      NODE_TEST_PORT: ${NODE_TEST_PORT}
      REACT_PORT: ${REACT_PORT}
      ANGULAR_PORT: ${ANGULAR_PORT}
      NEXT_PORT: ${NEXT_PORT}

  react_view:
    image: node:18.12.1 # -alpine3.15
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./view/react_view:/react_view
    command: >
      sh -c "cd /react_view &&
            echo '>>> ASSIGN NEEDED INSTALL PERMISSIONS <<<' &&
            echo '' &&
            chmod 777 /root &&
            echo '' &&
            echo '>>> INSTALLING NODE MODULES <<<' &&
            echo '' &&
            npm i &&
            npm install -g serve &&
            echo '' &&
            echo '>>> STARTING SERVICE <<<' &&
            echo '' &&
            mkdir -p node_modules/.cache && chmod -R 777 node_modules/.cache &&
            # npm run build &&
            # serve -s build -l ${REACT_PORT}
            npm start
            "
    depends_on:
      - node_controller

  angular_view:
    image: node:18.12.1-alpine3.15
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./view/angular_view:/angular_view
    command: >
      sh -c "cd /angular_view &&
            echo '>>> INSTALLING NODE MODULES <<<' &&
            echo '' &&
            npm i &&
            npm install -g serve &&
            echo '' &&
            echo '>>> STARTING SERVICE <<<' &&
            echo '' &&
            # npm run build &&
            # serve -s dist/angular-view -l ${ANGULAR_PORT}
            npm start --configuration=${CONFIGURATION}
            "
    depends_on:
      - node_controller

  next_view:
    image: node:18.12.1-alpine3.15
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./view/next_view:/next_view
    command: >
      sh -c "cd /next_view &&
            echo '>>> INSTALLING NODE MODULES <<<' &&
            echo '' &&
            npm i &&
            echo '' &&
            echo '>>> STARTING SERVICE <<<' &&
            echo '' &&
            # npm run build &&
            # npm run start
            npm run dev
            "
    depends_on:
      - node_controller